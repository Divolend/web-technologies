// ===============================
//  –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
// ===============================
const order = {
  soup: null,
  main: null,
  salad: null,
  drink: null,
  dessert: null
};

// -------------------------------
//  –°–±—Ä–æ—Å –∑–∞–∫–∞–∑–∞ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
// -------------------------------
function clearOrder() {
  order.soup = null;
  order.main = null;
  order.salad = null;
  order.drink = null;
  order.dessert = null;
}

// ---------------------------------------------------------
//  –î–æ–±–∞–≤–∏—Ç—å –±–ª—é–¥–æ –≤ –∑–∞–∫–∞–∑ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ render.js –ø–æ –∫–ª–∏–∫—É)
//  dish.category: 'soup' | 'main' | 'salad' | 'drink' | 'dessert'
// ---------------------------------------------------------
function addToOrder(dish) {
  if (!dish || !dish.category) return;
  order[dish.category] = dish;     // –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞–∫—Å–∏–º—É–º 1 –ø–æ–∑–∏—Ü–∏—è
  updateOrderBlock();
}

// ---------------------------------------------------------
//  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–∞ "–í–∞—à –∑–∞–∫–∞–∑" (textarea –Ω–µ —Ç—Ä–æ–≥–∞–µ–º)
//  + –¥–æ–±–∞–≤–ª—è–µ–º data-category, —á—Ç–æ–±—ã –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –º–æ–∂–Ω–æ –±—ã–ª–æ
//    —á–∏—Ç–∞—Ç—å –∑–∞–∫–∞–∑ –∏–∑ DOM
// ---------------------------------------------------------
function updateOrderBlock() {
  const orderItems = document.getElementById('order-items');
  if (!orderItems) return;

  const nothingSelected =
    !order.soup && !order.main && !order.salad && !order.drink && !order.dessert;

  if (nothingSelected) {
    orderItems.innerHTML = `<p><strong>–ù–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ</strong></p>`;
    return;
  }

  const catTitle = {
    soup: '–°—É–ø',
    main: '–ì–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ',
    salad: '–°–∞–ª–∞—Ç/—Å—Ç–∞—Ä—Ç–µ—Ä',
    drink: '–ù–∞–ø–∏—Ç–æ–∫',
    dessert: '–î–µ—Å–µ—Ä—Ç'
  };

  let total = 0;
  let html = '';

  ['soup', 'main', 'salad', 'drink', 'dessert'].forEach(cat => {
    const item = order[cat];
    if (item) {
      html += `
        <p data-category="${cat}">
          <strong>${catTitle[cat]}</strong><br>${item.name} ${item.price}‚ÇΩ
        </p>`;
      total += Number(item.price) || 0;
    } else {
      const noneText = (cat === 'drink') ? '–ù–∞–ø–∏—Ç–æ–∫ –Ω–µ –≤—ã–±—Ä–∞–Ω' : '–ë–ª—é–¥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ';
      html += `
        <p data-category="${cat}">
          <strong>${catTitle[cat]}</strong><br>${noneText}
        </p>`;
    }
  });

  if (total > 0) {
    html += `<p><strong>–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞</strong><br>${total}‚ÇΩ</p>`;
  }

  orderItems.innerHTML = html;
}

/* ===========================
   –í–ê–õ–ò–î–ê–¶–ò–Ø –ö–û–ú–ë–û + –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø
   =========================== */

// –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –æ–±—ä–µ–∫—Ç–∞ order (—Ç.–∫. —É —Ç–µ–±—è –ø–æ 1 –ø–æ–∑–∏—Ü–∏–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
function collectOrderStats(){
  const stats = { soup:0, main:0, salad:0, drink:0, dessert:0, total:0 };
  ['soup','main','salad','drink','dessert'].forEach(cat => {
    if (order[cat]) { stats[cat] = 1; stats.total += 1; }
  });
  return stats;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –æ–¥–Ω–æ–º—É –∏–∑ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –∫–æ–º–±–æ
// A: soup + main + salad + drink
// B: soup + main + drink
// C: soup + salad + drink
// D: main + salad + drink
// E: main + drink
function matchesAllowedCombos(s){
  const A = s.soup && s.main && s.salad && s.drink;
  const B = s.soup && s.main && s.drink;
  const C = s.soup && s.salad && s.drink;
  const D = s.main && s.salad && s.drink;
  const E = s.main && s.drink;
  return A || B || C || D || E;
}

// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç { ok, code?, msg? } c –æ–¥–Ω–∏–º –∏–∑ 5 —Ç–µ–∫—Å—Ç–æ–≤
function validateOrder(){
  const s = collectOrderStats();

  // 1) –ü—É—Å—Ç–æ
  if (s.total === 0) {
    return { ok:false, code:'empty', msg:'–ù–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ. –í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞' };
  }

  // 2) –£–∂–µ –≤–∞–ª–∏–¥–Ω–æ
  if (matchesAllowedCombos(s)) {
    return { ok:true };
  }

  // 3) ¬´–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø–∏—Ç–æ–∫¬ª ‚Äî –≤—ã–±—Ä–∞–Ω—ã –≤—Å–µ –Ω—É–∂–Ω—ã–µ, –∫—Ä–æ–º–µ drink
  //    –õ—é–±–∞—è –∫–æ–º–±–æ –≤ –Ω–∞—à–µ–º —Å–ø–∏—Å–∫–µ —Ç—Ä–µ–±—É–µ—Ç drink
  if (
    s.drink === 0 && (
      (s.soup && s.main) ||
      (s.soup && s.salad) ||
      (s.main && s.salad) ||
      (s.main)                // –¥–ª—è –∫–æ–º–±–æ E (main+drink)
    )
  ) {
    return { ok:false, code:'need_drink', msg:'–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø–∏—Ç–æ–∫' };
  }

  // 4) ¬´–í—ã–±–µ—Ä–∏—Ç–µ –≥–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ/—Å–∞–ª–∞—Ç/—Å—Ç–∞—Ä—Ç–µ—Ä¬ª ‚Äî –µ—Å—Ç—å —Å—É–ø, –Ω–æ –Ω–µ—Ç main –∏ salad
  if (s.soup && !s.main && !s.salad) {
    return { ok:false, code:'need_main_or_salad', msg:'–í—ã–±–µ—Ä–∏—Ç–µ –≥–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ/—Å–∞–ª–∞—Ç/—Å—Ç–∞—Ä—Ç–µ—Ä' };
  }

  // 5) ¬´–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–ø –∏–ª–∏ –≥–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ¬ª ‚Äî –µ—Å—Ç—å —Å–∞–ª–∞—Ç, –Ω–æ –Ω–µ—Ç soup –∏ main
  if (s.salad && !s.soup && !s.main) {
    return { ok:false, code:'need_soup_or_main', msg:'–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–ø –∏–ª–∏ –≥–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ' };
  }

  // 6) ¬´–í—ã–±–µ—Ä–∏—Ç–µ –≥–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ¬ª ‚Äî –≤—ã–±—Ä–∞–Ω –Ω–∞–ø–∏—Ç–æ–∫/–¥–µ—Å–µ—Ä—Ç, –Ω–æ –Ω–µ—Ç main
  if (!s.main && (s.drink || s.dessert)) {
    return { ok:false, code:'need_main', msg:'–í—ã–±–µ—Ä–∏—Ç–µ –≥–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ' };
  }

  // –§–æ–ª–±—ç–∫ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
  return { ok:false, code:'generic', msg:'–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ—Å—Ç–∞–≤ –ª–∞–Ω—á–∞: —á–µ–≥–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç' };
}

// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª–∫–∏-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω–µ—Ç —Å—Ç–∏–ª–µ–π ‚Äî –≤—Å—Ç–∞–≤–∏–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ)
function showNotice(message){
  const id = 'notice-styles';
  if (!document.getElementById(id)){
    const css = document.createElement('style');
    css.id = id;
    css.textContent = `
      .notice-backdrop{position:fixed;inset:0;display:flex;align-items:center;justify-content:center;background:rgba(0,0,0,.15);z-index:9999}
      .notice-modal{background:#fff;border:1px solid #d6d6d6;border-radius:16px;max-width:640px;width:min(88vw,640px);padding:28px 24px;box-shadow:0 16px 24px rgba(0,0,0,.12);text-align:center}
      .notice-title{font-size:28px;line-height:1.3;margin:0 0 22px}
      .notice-btn{padding:14px 32px;border-radius:12px;border:1px solid #111;background:#fff;font-size:20px;cursor:pointer;transition:.2s}
      .notice-btn:hover{background:#111;color:#fff}
    `;
    document.head.appendChild(css);
  }

  const backdrop = document.createElement('div');
  backdrop.className = 'notice-backdrop';
  backdrop.innerHTML = `
    <div class="notice-modal" role="dialog" aria-modal="true">
      <div class="notice-title">${message}</div>
      <button type="button" class="notice-btn">–û–∫–µ–π üëå</button>
    </div>
  `;

  function close(){
    backdrop.remove();
    document.removeEventListener('keydown', onEsc);
  }
  function onEsc(e){ if (e.key === 'Escape') close(); }

  backdrop.addEventListener('click', (e)=>{
    if (e.target === backdrop) close();
  });
  backdrop.querySelector('.notice-btn').addEventListener('click', close);
  document.addEventListener('keydown', onEsc);

  document.body.appendChild(backdrop);
}

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –∫ —Ñ–æ—Ä–º–µ
(function attachOrderValidation(){
  const form = document.getElementById('order-form');
  if (!form) return;
  form.addEventListener('submit', (e)=>{
    const res = validateOrder();
    if (!res.ok){
      e.preventDefault();
      showNotice(res.msg);
    }
  });
})();
